---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: prometheus
  annotations:
    "openshift.io/display-name": Prometheus
    iconClass: fa fa-cogs
    tags: "monitoring, prometheus, time-series"
parameters:
  - description: The location of the prometheus image
    name: IMAGE_PROMETHEUS
    value: quay.io/prometheus/prometheus
  - name: APPLICATION_NAME
    value: prometheus-demo

objects:
  # - apiVersion: batch/v1
  #   kind: Job
  #   metadata:
  #     name: prometheus-generate-data
  #   spec:
  #     selector: {}
  #     template:
  #       metadata:
  #         name: prometheus-generate-data
  #       spec:
  #         containers:
  #           - name: "prometheus-generate-data"
  #             command: ["/bin/sh"]
  #             args: ["-c", "go get -u github.com/jjneely/stuff/cmd/historygen; cd /go/src/github.com/jjneely/stuff/cmd/historygen; go build; ./historygen -c 10 -o /data"]
  #             image: "golang:1.13.8"
  #             imagePullPolicy: IfNotPresent
  #             env:
  #               - name: XDG_CACHE_HOME
  #                 value: "/tmp/.cache"
  #             volumeMounts:
  #               - mountPath: /data
  #                 name: prometheus-data
  #         restartPolicy: Never
  #         volumes:
  #           - name: prometheus-data
  #             persistentVolumeClaim:
  #               claimName: ${APPLICATION_NAME}

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        deploymentConfig: ${APPLICATION_NAME}
        app: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            deploymentConfig: ${APPLICATION_NAME}
            app: ${APPLICATION_NAME}
        spec:
          containers:
            - name: ${APPLICATION_NAME}
              args:
                - --storage.tsdb.path=/data
                - --storage.tsdb.retention.time=4w
                - --storage.tsdb.min-block-duration=2h
                - --storage.tsdb.max-block-duration=2h
                - --config.file=/etc/prometheus/prometheus.yml
                - --web.listen-address=0.0.0.0:9090
              image: ${IMAGE_PROMETHEUS}
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - mountPath: /etc/prometheus
                  name: prometheus-config
                - mountPath: /data
                  name: prometheus-data
          restartPolicy: Always
          volumes:
            - name: prometheus-config
              configMap:
                defaultMode: 420
                name: ${APPLICATION_NAME}
            - name: prometheus-data
              persistentVolumeClaim:
                claimName: ${APPLICATION_NAME}

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "10Gi"

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APPLICATION_NAME}-service
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ports:
        - port: 9090
          name: http
      selector:
        app: ${APPLICATION_NAME}

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}-route
      labels:
        app: ${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}-service
