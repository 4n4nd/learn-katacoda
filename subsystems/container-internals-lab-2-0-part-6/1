The goal of this lab is to get a basic understanding of the three Open Containers Initiative (OCI) specificaitons that govern finding, running, building and sharing container - image, runtime, and distribution. If you are interested in a slightly deeper understanding, take a few minutes to look at the work, it's all publicly available in GitHub repositories:

The Image Spec overview:
https://github.com/opencontainers/image-spec/blob/master/spec.md#overview

The Runtime Spec abstract:
https://github.com/opencontainers/runtime-spec/blob/master/spec.md

The Distributions Spec use cases:
https://github.com/opencontainers/distribution-spec/blob/master/spec.md#use-cases

Now, lets run some experiments to better understand these specifications.

## The Image Specification

First, lets take a quick look at the contents of a container repository once it's uncompressed. We will use a utility you may have seen before called Podman. The syntax is nearly identical to docker:

Create a working directory for our experiment, then make sure the fedora image is cached locally:
``mkdir fedora
cd fedora
podman pull fedora``{{execute}}

Now, export the image to a tar, file and extract it:
``podman save -o fedora.tar fedora
tar xvf fedora.tar
``{{execute}}

Finlly, let's take a look at three important parts of the container repository - these are the pieces that can be found on a registry server:

1. Manifest - has meta data which defines layers and config files to be used
2. Config - has meta data which is consumed by the container engine which is combined with engine defaults and usr inputs to create the runtime Config
3. Image Layers - tar files, typically gzipped which when merged together create a root file system which is mounted at container creation



# The Runtime Specification
